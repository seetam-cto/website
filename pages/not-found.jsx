import Head from 'next/head'
import Header from "../components/Header"
import { getSettings } from '../controllers/general'
import { useDispatch, useSelector } from 'react-redux'
import { useEffect } from 'react'
import { useRouter } from 'next/router'
import Footer from '../components/Footer'
import Lottie from 'react-lottie';
import * as loadAnim from "../assets/images/loading.json"

const loaderOptions = {
  loop: true,
  autoplay: true, 
  animationData: loadAnim,
  rendererSettings: {
    preserveAspectRatio: 'xMidYMid slice'
  }
};

export default function PageNotFound({settingsData}) {
  let sets = useSelector((state) => state.settings)
  const dispatch = useDispatch()
  const router = useRouter()
  useEffect(() => {
    if(!sets.loaded){
      dispatch({
        type: "FETCH_API",
        payload: {
          ...settingsData,
          loaded: true
        }
      })
      router.push("/terms-conditions")
    }
  },[sets])
  return (
    <div className="home">
      <Head>
        <title>SwitchOff - Page Not Found</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div id={'globalLoader'}>
        <Lottie options={loaderOptions}
        height={200}
        isClickToPauseDisabled={true}
        width={200}/>
      </div>
      <Header headerSettings={settingsData}/>
      <div className="container">
        <div className="pagenotfound">
            
        </div>
      </div>
      <Footer footer={settingsData.footer} general={settingsData.general}/>
    </div>
  )
}

export async function getServerSideProps() {
  let res = await getSettings()
  return {
    props: {
      settingsData: res.settings,
    }
  }
}
